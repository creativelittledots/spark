/*----------------------------------------------------------------------------*\
    #STRING REPLACE
\*----------------------------------------------------------------------------*/

/// @group Tools
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string

@function nu-strReplace($string, $search, $replace: '') {

    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + nu-strReplace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}



/*----------------------------------------------------------------------------*\
    #STRING CAPITALISE
\*----------------------------------------------------------------------------*/

/// @group Tools
/// @param {String} $string - Initial string
/// @return {String} $string - Updated string

@function nu-strCapitalise($string) {

    @return to-upper-case(str-slice($string, 1, 1)) + str-slice($string, 2);
}



/*----------------------------------------------------------------------------*\
    #UNCAPITALISE STRING
\*----------------------------------------------------------------------------*/

/// @group Tools
/// @param {String} $string - Initial string
/// @return {String} $string - Updated string

@function nu-strUncapitalise($string) {

    @return to-lower-case(str-slice($string, 1, 1)) + str-slice($string, 2);
}



/*----------------------------------------------------------------------------*\
    #CAPITALISE EACH WORD IN STRING

    @param {String} $string - Initial string
    @return {String} $string - Updated string
\*----------------------------------------------------------------------------*/

@function nu-upperCaseWords($string) {

    $progress: $string;
    $result: "";
    $running: true;

    @while $running {

        $index: str-index($progress, " ");

        @if $index {
            $result: $result + nu-strCapitalise(str-slice($progress, 1, $index));
            $progress: str-slice($progress, ($index + 1));
        }

        @else {
            $running: false;
        }
    }

    @return nu-strCapitalise($result) + nu-strCapitalise($progress);
}



/*----------------------------------------------------------------------------*\
    #CAMELISE STRING

    @param {String} $string - Initial string
    @return {String} $string - Updated string
\*----------------------------------------------------------------------------*/

@function nu-camelise($string) {

    $progress: $string;
    $result: "";
    $exclude: " ", "-", "–", "—", "_", ",", ";", ":", ".";

    @while str-length($progress) > 0 {

        $char: str-slice($progress, 1, 1);

        @if contain($exclude, $char) {
            $progress: nu-strCapitalise(str-slice($progress, 2, 2)) + str-slice($progress, 3);
        }

        @else {
            $result: $result + $char;
            $progress: str-slice($progress, 2);
        }
    }

    @return $result;
}


