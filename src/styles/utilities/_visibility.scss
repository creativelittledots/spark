/*----------------------------------------------------------------------------*\
    #VISIBILITY UTILITIES
\*----------------------------------------------------------------------------*/

/// @group Utilities
/// @param {List} $responsive [(up)] - Breakpoint rules
/// @param {List} $utilities [(
///    hide,
///    block,
///    inblock,
///    locked,
///    radius,
///    sticky,
///    pointer
/// )] - Spacing sizes
/// @require {function} nu-chain
/// @require {function} nu-strReplace
/// @require {mixin} nu-breakpoints

@mixin nu-utility__visibility(
    $responsive: (up, only, down),
    $utilities: (
        hide,
        block,
        inblock,
        locked,
        radius,
        sticky,
        pointer
    )
) {

    @include nu-breakpoints( $responsive ) {

        @if index($utilities, hide) {

            #{nu-chain('.u-hide' + $break)} {
                display: none;
            }
        }

        @if index($utilities, block) {

            #{nu-chain('.u-block' + $break)} {
                display: block;
            }
        }

        @if index($utilities, inblock) {

            #{nu-chain('.u-inblock' + $break)} {
                display: inline-block;
            }
        }

        @if index($utilities, locked) {

            #{nu-chain('.u-locked' + $break)} {
                overflow: hidden;
            }
        }

        @if index($utilities, sticky) {

            #{nu-chain('.u-sticky' + $break)} {
                position: static;
                position: sticky;
                top: 0;
                z-index: 1;

                &::before, // .u-sticky.u-sticky::before,
                &::after { // .u-sticky.u-sticky::after
                    content: '';
                    display: table;
                }
            }
        }
    }

    @if index($utilities, radius) {

        #{nu-chain('.u-radius')} {
            border-radius: $nu-radius;
        }
    }

    @if index($utilities, pointer) {

        #{nu-chain('.u-pointerNone' + $break)} {
            pointer-events: none;
        }
    }
}


