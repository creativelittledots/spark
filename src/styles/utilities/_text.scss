/*----------------------------------------------------------------------------*\
    #TEXT UTILITIES
\*----------------------------------------------------------------------------*/

/// @group Utilities
/// @param {List} $responsive [(up)] - Breakpoint rules
/// @param {List} $steps [(
///    text-start,
///    text-center,
///    text-end,
///    text-grow,
///    text-shrink,
///    text-bolder,
///    text-lighter,
///    text-strong,
///    text-justify,
///    text-success,
///    text-warn,
///    text-error,
///    text-disabled,
///    text-lower,
///    text-upper,
///    text-caps,
///    text-nowrap
/// )] - Spacing sizes
/// @require {function} nu-chain
/// @require {function} nu-rem
/// @require {mixin} nu-breakpoints
/// @require {mixin} nu-headings

@mixin nu-utility__text(
    $responsive: false,
    $utilities: (
        text-start,
        text-center,
        text-end,
        text-grow,
        text-shrink,
        text-bolder,
        text-lighter,
        text-strong,
        text-justify,
        text-success,
        text-warn,
        text-error,
        text-disabled,
        text-lower,
        text-upper,
        text-caps,
        text-nowrap
    )
) {

    @if index($utilities, text-bolder) {

        #{nu-chain('.u-textBolder')} {
            font-weight: bolder;
        }
    }

    @if index($utilities, text-lighter) {

        #{nu-chain('.u-textLighter')} {
            font-weight: lighter;
        }
    }

    @if index($utilities, text-strong) {

        #{nu-chain('.u-textStrong')} {
            font-weight: 600;
        }
    }

    @if index($utilities, text-success) {

        #{nu-chain('.u-textSuccess')} {
            color: $nu-colourSuccess;
        }
    }

    @if index($utilities, text-warn) {

        #{nu-chain('.u-textWarn')} {
            color: $nu-colourWarn;
        }
    }

    @if index($utilities, text-error) {

        #{nu-chain('.u-textError')} {
            color: $nu-colourError;
        }
    }

    @if index($utilities, text-disabled) {

        #{nu-chain('.u-textDisabled')} {
            color: $nu-colourDisabled;
        }
    }

    @if index($utilities, text-lower) {

        #{nu-chain('.u-textLower')} {
            text-transform: lowercase;
        }
    }

    @if index($utilities, text-upper) {

        #{nu-chain('.u-textUpper')} {
            text-transform: uppercase;
        }
    }

    @if index($utilities, text-caps) {

        #{nu-chain('.u-textCaps')} {
            text-transform: capitalize;
        }
    }

    @include nu-breakpoints( $responsive ) {

        @if index($utilities, text-start) {

            #{nu-chain('.u-textStart' + $break)} {
                text-align: left;
                text-align: start;
            }
        }

        @if index($utilities, text-center) {

            #{nu-chain('.u-textCenter' + $break)} {
                text-align: center;
            }
        }

        @if index($utilities, text-end) {

            #{nu-chain('.u-textEnd' + $break)} {
                text-align: right;
                text-align: end;
            }
        }

        @if index($utilities, text-justify) {

            #{nu-chain('.u-textJustify' + $break)} {
                text-align: justify;
            }
        }

        @if index($utilities, text-grow) {

            #{nu-chain('.u-textGrow' + $break)} {
                font-size: 125%;
            }
        }

        @if index($utilities, text-shrink) {

            #{nu-chain('.u-textShrink' + $break)} {
                font-size: 75%;
            }
        }

        @if index($utilities, text-nowrap) {

            #{nu-chain('.u-textNowrap' + $break)} {
                white-space: nowrap;
            }
        }

    }

    @if ( $nu-responsiveType ) {

        @include nu-breakpoints {

            @include nu-headings( nu-rem( $nu-headingIncrement ) * $breakindex );
        }
    }

    @else {

        @include nu-headings( nu-rem( $nu-headingIncrement * 3 )  );
    }
}


