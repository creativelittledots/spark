/*----------------------------------------------------------------------------*\
    #TOGGLE
\*----------------------------------------------------------------------------*/

@mixin sb-component__toggle(
    $colourOn:      dodgerblue,
    $colourOff:     lightgrey,
    $handleColour:  white,
    $trans:         $trans,
    $toggles: (
        default: (
            gap: 0.1875rem,
            size: rem(20)
        ),
        // small: (
        //     gap: 0.125rem,
        //     size: rem(16)
        // ),
        // medium: (
        //     gap: rem(4),
        //     size: rem(32)
        // ),
        // large: (
        //     gap: rem(5),
        //     size: 3rem
        // ),
        // xlarge: (
        //     gap: 0.4375rem,
        //     size: 4rem
        // )
    )
) {

    // .c-toggle
    $block: &;
    $size: map-deep-get($toggles, 'default', 'size');
    $gap: map-deep-get($toggles, 'default', 'gap');

    &__input { // .c-toggle__input
        @include area(0.1px);
        opacity: 0;
        position: absolute;

        &:checked + #{$block}__label { // .c-toggle__input:checked + .c-toggle__label
            background-color: $colourOn;

            &::before { // .c-toggle__input:checked + .c-toggle__label::before
                right: $gap;
            }

            &::after { // .c-toggle__input:checked + .c-toggle__label::after
                content: attr(data-on);
            }
        }
    }

    &__label#{&}__label  { // .c-toggle__label.c-toggle__label
        background-color: $colourOff;
        border-radius: $size * 2;
        cursor: pointer;
        display: block;
        @include area($size, $size * 2);
        margin: 0;
        transition: background-color $trans;
        user-select: none;

        &::before { // .c-toggle__label.c-toggle__label::before
            background: $handleColour;
            border-radius: 50%;
            box-shadow: 0 $gap $size / 2 rgba(black, 0.1);
            content: '';
            display: block;
            @include area($size - ($gap * 2));
            margin: 0;
            right: calc(100% - #{$size - $gap}); top: $gap;
            position: absolute;
            transition: right $trans;
        }

        &::after { // .c-toggle__label.c-toggle__label::after
            content: attr(data-off);
            font-size: rem(14);
            left: calc(100% + #{rem(8)}); top: 50%;
            position: absolute;
            transform: translateY(-50%);
        }
    }

    @each $class, $map in $toggles {

        @if ( $class != 'default' ) {

            &--#{$class} { // .c-toggle--small
                $size: map-get($map, 'size');
                $gap: map-get($map, 'gap');

                #{$block} { // .c-toggle--small .c-toggle

                    &__input:checked + #{$block}__label::before { // .c-toggle--small .c-toggle__input:checked + .c-toggle__label::before
                        right: $gap;
                    }

                    &__label { // .c-toggle--small .c-toggle__label
                        border-radius: $size * 2;
                        @include area($size, $size * 2);

                        &::before { // .c-toggle--small .c-toggle__label::before
                            @include area($size - ($gap * 2));
                            right: calc(100% - #{$size - $gap}); top: $gap;
                        }
                    }
                }
            }
        }
    }
}


